using AutoGeneratedSystem.ClientServices;
using AutoGeneratedSystem.Common;
using AutoGeneratedSystem.Models.ApplicationUserApplicationRole;
using Microsoft.AspNetCore.Components;
using Blazored.Toast.Services;
namespace AutoGeneratedSystem.Client.Pages.ApplicationUserApplicationRole
{
[Route(Constants.PageRoutes.ApplicationUserApplicationRoleRoutes.List)]
public partial class List
{
[Inject]
ApplicationUserApplicationRoleClientService ApplicationUserApplicationRoleClientService { get; set; }
[Inject]
private IToastService ToastService { get;set; }
[Inject] private NavigationManager NavigationManager { get; set; }
private ApplicationUserApplicationRoleModel[] AllApplicationUserApplicationRole { get; set; }
private bool IsLoading {get; set;}
protected override async Task OnInitializedAsync()
{
try
{
this.IsLoading = true;
this.AllApplicationUserApplicationRole = await ApplicationUserApplicationRoleClientService.GetAllApplicationUserApplicationRoleAsync();
}
catch (Exception ex)
{
ToastService.ShowError(ex.Message);
}
finally
{
this.IsLoading=false;
}
}
private async Task DeleteApplicationUserApplicationRoleAsync(ApplicationUserApplicationRoleModel model)
{
try
{
this.IsLoading = true;
await this.ApplicationUserApplicationRoleClientService.DeleteApplicationUserApplicationRoleAsync(model);
this.AllApplicationUserApplicationRole = await ApplicationUserApplicationRoleClientService.GetAllApplicationUserApplicationRoleAsync();
ToastService.ShowSuccess($"ApplicationUserApplicationRole with id {model.ApplicationUserApplicationRoleId} has been deleted");
}
catch (Exception ex)
{
ToastService.ShowError(ex.Message);
}
finally
{
this.IsLoading = false;
}
}
}
}
