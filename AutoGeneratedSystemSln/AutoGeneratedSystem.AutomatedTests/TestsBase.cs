

using AutoGeneratedSystem.ClientServices;
using AutoGeneratedSystem.Server;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Mvc.Testing;
using Microsoft.AspNetCore.TestHost;
using Microsoft.Extensions.Configuration;
using System.Net.Http;

namespace AutoGeneratedSystem.AutomatedTests
{
    public abstract class TestsBase
    {

        public TestsBase()
        {

            ConfigurationBuilder configurationBuilder = new();
            configurationBuilder.AddJsonFile("appsettings.json")
                .AddUserSecrets<Program>();
            var configRoot = configurationBuilder.Build();
            IConfiguration configuration = configurationBuilder.Build();
            var application = new WebApplicationFactory<Program>()
        //.WithWebHostBuilder(builder =>
        //{
        //    builder.ConfigureServices(services => 
        //    {
        //        Startup.ConfigureServices(services, configuration);
        //    });
        //    // ... Configure test services
        //})
        ;
            Server = application.Server;
        }

        public TestsHttpClientFactory TestsHttpClientFactory { get; private set; } = new();
        public static TestServer? Server { get; private set; }

        private HttpClientService CreateHttpClientService()
        {
            HttpClientService httpClientService = new(this.TestsHttpClientFactory);
            return httpClientService;
        }

        protected ApplicationUserClientService CreateApplicationUserClientService()
        {
            ApplicationUserClientService applicationUserClientService = new(CreateHttpClientService());
            return applicationUserClientService;
        }
    }

    public class TestsHttpClientFactory : IHttpClientFactory
    {
        public HttpClient CreateClient(string name)
        {
            string assemblyName = "AutoGeneratedSystem";
            var serverApiClientName = $"{assemblyName}.ServerAPI";
            var client = TestsBase.Server!.CreateClient();
            //if (name == serverApiClientName)
            //{
            //    client.DefaultRequestHeaders.Authorization =
            //        new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", TestsBase.UserBearerToken);
            //    return client;
            //}
            //else
            return client;
        }
    }
}