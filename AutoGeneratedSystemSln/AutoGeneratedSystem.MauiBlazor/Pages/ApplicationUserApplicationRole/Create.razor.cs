using AutoGeneratedSystem.Models.ApplicationUserApplicationRole;
using Microsoft.AspNetCore.Components;
using Blazored.Toast.Services;
using AutoGeneratedSystem.ClientServices;
using AutoGeneratedSystem.Common;
namespace AutoGeneratedSystem.MauiBlazor.Pages.ApplicationUserApplicationRole
{
[Route(Constants.PageRoutes.ApplicationUserApplicationRoleRoutes.Create)]
public partial class Create
{
[Inject]
ApplicationUserApplicationRoleClientService ApplicationUserApplicationRoleClientService { get; set; }
[Inject]
private IToastService ToastService { get;set; }
[Inject] private NavigationManager NavigationManager { get; set; }
private CreateApplicationUserApplicationRoleModel Model {get;set;} = new();
private bool IsLoading {get;set;} = false;
private long ApplicationUserId { get; set; }
private AutoGeneratedSystem.Models.ApplicationUser.ApplicationUserModel[] ApplicationUserModelItems{ get; set; }
[Inject] private ApplicationUserClientService ApplicationUserClientService { get; set; }
private long ApplicationRoleId { get; set; }
private AutoGeneratedSystem.Models.ApplicationRole.ApplicationRoleModel[] ApplicationRoleModelItems{ get; set; }
[Inject] private ApplicationRoleClientService ApplicationRoleClientService { get; set; }
protected override async Task OnInitializedAsync()
{
try
{
IsLoading = true;
this.ApplicationUserModelItems = await ApplicationUserClientService.GetAllApplicationUserAsync();
this.ApplicationRoleModelItems = await ApplicationRoleClientService.GetAllApplicationRoleAsync();
}
catch (Exception ex)
{
ToastService.ShowError(ex.Message);
}
finally
{
IsLoading = false;
}
}
private async Task OnValidSubmitAsync()
{
try
{
IsLoading = true;
var result = await this.ApplicationUserApplicationRoleClientService.CreateApplicationUserApplicationRoleAsync(this.Model);
this.NavigationManager.NavigateTo("/ApplicationUserApplicationRole/List");
ToastService.ShowSuccess("New ApplicationUserApplicationRole has been created");
}
catch (Exception ex)
{
ToastService.ShowError(ex.Message);
}
finally
{
IsLoading = false;
}
}
}
}
